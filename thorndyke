#!/usr/bin/env python3

import os
import sys
import json
import signal
import logging
import argparse
import threading
import subprocess
from tqdm import tqdm
from datetime import datetime
sys.path.append(os.getcwd()+"/.lib/")
sys.path.append(os.getcwd()+"/.src/")
from _main_ import *
from colors import red,green,yellow,white,reset
    
if args.verbose:
	logging.basicConfig(level=logging.DEBUG, format=f"{white}[{green}*{white}] %(message)s{reset}")
if __name__ == "__main__":
    threads = []
    start = datetime.utcnow()
    if args.verbose:
    	print(f"{white}[{green}*{white}] Thorndyke started at {green}{start}{reset}")
    if args.shell:
    	subprocess.run(["chmod","+x",f"{os.getcwd()}/.src/thorndyke.sh"],text=True)
    	if args.verbose:
    		print(f"{white}[{green}*{white}] [thorndyke.{green}sh{white}] Checking @{green}{args.username}{white}:{reset}")
    	subprocess.run([f"{os.getcwd()}/.src/thorndyke.sh", f"{args.username}"],text=True)
    else:
    	if args.dictionary:
    		site_list = args.dictionary
    	else:
    		site_list = ".rsc/sites.json"
    		with open(site_list) as data_file:
    		    data = json.load(data_file)
    		    
    		for site in data['sites']:
    		    x = threading.Thread(target=thorndyke, args=(site, args.username), daemon=True)
    		    threads.append(x)
    		    
    		for thread in threads:
    		    thread.start()
    		    
    		for thread in threads:
    			thread.join()
    			
    		if args.username:
    			print(f"{white}[{green}+{white}] Found @{green}{args.username}{white} on {green}{len(username_results)}{white} site(s):\n")
    			for result in tqdm(username_results):
    			    print(result)
    			if args.verbose:
    				print(f"{white}[{green}.{white}] Stopped in {green}{datetime.utcnow()-start}{white} seconds.{reset}")
